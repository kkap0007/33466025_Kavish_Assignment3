library(tsibble)
library(colorspace)
library(ggrepel)
library(kableExtra)
library(ggResidpanel)
library(rpart)
library(rpart.plot)
library(visdat)
library(plotly)
library(ggResidpanel)
pisa <- read.csv("data/pisa_au.csv") # reading the data
head(pisa,4)  # displaying first 4 rows
mean_scores <- pisa %>%
group_by(state) %>%   #1pt
summarise(mean_math = mean(math, na.rm =
TRUE),mean_science = mean(science, na.rm = TRUE),mean_read = mean(read, na.rm = TRUE))  # 1pt
mean_scores %>%
arrange(-mean_math) %>%  #1pt
head(3)   #1pt
top_marks <- pisa %>%
group_by(schtype) %>%
dplyr:: filter(gender== "female", birthyr = 1999) %2%
summarise (mean_math = mean (math, na.rm = TRUE) ,
mean_science = mean (science, na.rm = TRUE) , mean_read = mean (read, na.rm =
TRUE)) %>%
arrange (-mean_math, mean_science, -mean_read)
top_marks <- pisa %>%
group_by(schtype) %>%
dplyr:: filter(gender== "female", birthyr = 1999) %<%
summarise (mean_math = mean (math, na.rm = TRUE) ,
mean_science = mean (science, na.rm = TRUE) , mean_read = mean (read, na.rm =
TRUE)) %>%
arrange (-mean_math, mean_science, -mean_read)
top_marks <- pisa %>%
group_by(schtype) %>%
dplyr:: filter(gender== "female", birthyr = 1999) %>%
summarise (mean_math = mean (math, na.rm = TRUE) ,
mean_science = mean (science, na.rm = TRUE) , mean_read = mean (read, na.rm =
TRUE)) %>%
arrange (-mean_math, mean_science, -mean_read)
top_marks <- pisa %>%
group_by(schtype) %>%
dplyr:: filter(gender== "female", birthyr = 1999) %>%
summarise (mean_math = mean (math, na.rm = TRUE) ,
mean_science = mean (science, na.rm = TRUE) , mean_read = mean (read, na.rm =
TRUE)) %>%
arrange (-mean_math, mean_science, -mean_read)
top_marks <- pisa %>%
group_by(schtype) %>%
dplyr:: filter(gender== "female", birthyr == 1999) %>%
summarise (mean_math = mean (math, na.rm = TRUE) ,
mean_science = mean (science, na.rm = TRUE) , mean_read = mean (read, na.rm =
TRUE)) %>%
arrange (-mean_math, mean_science, -mean_read)
top_marks <- pisa %>%
group_by(schtype) %>%
dplyr:: filter(gender== "female", birthyr == 1999) %>%
summarise (mean_math = mean (math, na.rm = TRUE) ,
mean_science = mean (science, na.rm = TRUE) , mean_read = mean (read, na.rm =
TRUE)) %>%
arrange (-mean_math, mean_science, -mean_read)
top_marks <- pisa %>%
group_by(schtype) %>%
dplyr:: filter(gender== "female", birthyr == 1999) %>%
summarise (mean_math = mean (math, na.rm = TRUE) ,
mean_science = mean (science, na.rm = TRUE) , mean_read = mean (read, na.rm =
TRUE)) %>%
arrange (-mean_math, mean_science, -mean_read)
top_marks
read_state <- pisa %%
filter (state %in% c("VIC", "NSW", "OLD*))
ggp lot (read _state, aes ( x = read, fill = gender))
+
geom_density0 + facet_grid (schtype-state)
read_state <- pisa %%
filter (state %in% c("VIC", "NSW", "QLD"))
read_state <- pisa %%
filter (state %in% c("VIC", "NSW", "QLD"))
View(pisa)
View(pisa_filtered)
View(pisa_filtered)
read_state <- pisa %%
filter (state %in% c("VIC", "NSW", "QLD"))
read_state <- pisa %%
filter (state %in% c("VIC", "NSW", "QLD"))
pisa <- read.csv("data/pisa_au.csv") # reading the data
head(pisa,4)  # displaying first 4 rows
pisa <- read.csv("data/pisa_au.csv") # reading the data
head(pisa,4)  # displaying first 4 rows
pisa <- read.csv("data/pisa_au.csv") # reading the data
head(pisa,4)  # displaying first 4 rows
pisa <- read.csv("data/pisa_au.csv") # reading the data
head(pisa,4)  # displaying first 4 rows
pisa <- read.csv("data/pisa_au.csv") # reading the data
head(pisa,4)  # displaying first 4 rows
pisa <- read.csv("data/pisa_au.csv") # reading the data
head(pisa,4)  # displaying first 4 rows
pisa <- read.csv("data/pisa_au.csv") # reading the data
head(pisa,4)  # displaying first 4 rows
pisa <- read.csv("data/pisa_au.csv") # reading the data
head(pisa,4)  # displaying first 4 rows
pisa <- read.csv("data/pisa_au.csv") # reading the data
head(pisa,4)  # displaying first 4 rows
pisa <- read.csv("data/pisa_au.csv") # reading the data
head(pisa,4)  # displaying first 4 rows
mean_scores <- pisa %>%
group_by(state) %>%   #1pt
summarise(mean_math = mean(math, na.rm =
TRUE),mean_science = mean(science, na.rm = TRUE),mean_read = mean(read, na.rm = TRUE))  # 1pt
mean_scores %>%
arrange(-mean_math) %>%  #1pt
head(3)   #1pt
top_marks <- pisa %>%
group_by(schtype) %>%
dplyr:: filter(gender== "female", birthyr == 1999) %>%
summarise (mean_math = mean (math, na.rm = TRUE) ,
mean_science = mean (science, na.rm = TRUE) , mean_read = mean (read, na.rm =
TRUE)) %>%
arrange (-mean_math, mean_science, -mean_read)
top_marks
read_state <- pisa %%
filter (state %in% c("VIC", "NSW", "QLD"))
pisa_filtered <- drop_na(pisa) #(2pt)
pisa_filtered<-pisa_filtered %>%
dplyr::mutate(tot_score = math+science+read) %>%   #1pt
dplyr::mutate(tot_time = math_time+science_time+read_time)   #1pt
pisa_filtered %>%  ggplot(aes(y=science,x=science_time,x=tot_time))+geom_point()+facet_grid(~math)  #(2pt)
mean_scores <- pisa %>%
group_by(state) %>%   #1pt
summarise(mean_math = mean(math, na.rm =
TRUE),mean_science = mean(science, na.rm = TRUE),mean_read = mean(read, na.rm = TRUE))  # 1pt
read_state <- pisa %%
filter (state %in% c("VIC", "NSW", "QLD"))
read_state <- pisa %>%
filter (state %in% c("VIC", "NSW", "QLD"))
ggpplot(read_state, aes ( x = read, fill = gender))+
geom_density() +
facet_grid (schtype~state)
# Libraries required for the analysis (you can add more if you want to)
library(tidyverse)
library(readr)
library(lubridate)
library(tsibble)
library(colorspace)
library(ggrepel)
library(kableExtra)
library(ggResidpanel)
library(rpart)
library(rpart.plot)
library(visdat)
library(plotly)
library(ggResidpanel)
# Libraries required for the analysis (you can add more if you want to)
library(tidyverse)
library(readr)
library(lubridate)
library(tsibble)
library(colorspace)
library(ggrepel)
library(kableExtra)
library(ggResidpanel)
library(rpart)
library(rpart.plot)
library(visdat)
library(plotly)
library(ggResidpanel)
library(ggplot2)
read_state <- pisa %>%
filter (state %in% c("VIC", "NSW", "QLD"))
ggpplot(read_state, aes ( x = read, fill = gender))+
geom_density() +
facet_grid (schtype~state)
read_state <- pisa %>%
filter (state %in% c("VIC", "NSW", "QLD"))
ggplot(read_state, aes ( x = read, fill = gender))+
geom_density() +
facet_grid (schtype~state)
pisa_filtered <- drop_na(pisa) #(2pt)
pisa_filtered<-pisa_filtered %>%
dplyr::mutate(tot_score = math+science+read) %>%   #1pt
dplyr::mutate(tot_time = math_time+science_time+read_time)   #1pt
pisa_filtered %>%  ggplot(aes(y=tot_score,x=tot_time))+geom_point() #(2pt)
pisa_filtered <- drop_na(pisa) #(2pt)
pisa_filtered<-pisa_filtered %>%
dplyr::mutate(tot_score = math+science+read) %>%   #1pt
dplyr::mutate(tot_time = math_time+science_time+read_time)   #1pt
pisa_filtered %>%  ggplot(aes(y=tot_score,x=tot_time))+geom_point() #(2pt)
music_instr_gender <- pisa %>%
group_by(music_instr, gender) %>%
summarise(median_read = median(read, na.rm = TRUE),
median_math = median(math, na.rm = TRUE),
median_science = median(science, na.rm = TRUE)) %>%
arrange(music_instr, gender)
music_instr_gender
df_new<- pisa_filtered %>%
mutate(num_gender = ifelse(gender == "female", 1, 0)) %>%
select(num_gender,music_instr,internet_use,sport,belong,anxtest,motivat,wealth, internet_use, read,tot_time, tot_score) #(1pt)
m<- kmeans(df_new) #(1pt)
df_new<- pisa_filtered %>%
mutate(num_gender = ifelse(gender == "female", 1, 0)) %>%
select(num_gender,music_instr,internet_use,sport,belong,anxtest,motivat,wealth, internet_use, read,tot_time, tot_score) #(1pt)
m<- dist(df_new) #(1pt)
# Solution for $k=5$
kmeans_basic <- kmeans(df_new, centers = 5)
kmeans_basic_df <- data.frame(Clusters = kmeans_basic$cluster, df_new) #(1pt)
#Number in each Cluster
kmeans_basic_df %>%
group_by(Clusters)%>%
count() #(2pt)
df_new<- pisa_filtered %>%
mutate(num_gender = ifelse(gender == "female", 1, 0)) %>%
select(num_gender,music_instr,internet_use,sport,belong,anxtest,motivat,wealth, internet_use, read,tot_time, tot_score) #(1pt)
m<- dist(df_new) #(1pt)
# Solution for $k=5$
kmeans_basic <- kmeans(df_new, centers = 5)
kmeans_basic_df <- data.frame(Clusters = kmeans_basic$cluster, df_new) #(1pt)
#Number in each Cluster
kmeans_basic_df %>%
group_by(Clusters)%>%
count() #(2pt)
cluster_centers <- as.data.frame(m$centers)
cluster_centers <- as.data.frame(m$centers)
kmeans_basic_df %>%
group_by(Clusters) %>%
summarize_all(median) %>%
select(Clusters)
#2pt
kmeans_basic_df %>%
group_by(Clusters) %>%
summarize_all(median) %>%
select(Clusters,everything())
#2pt
knitr::opts_chunk$set(
echo = TRUE,
eval = FALSE,
message = FALSE,  # Change this to FALSE before you submit your assignment
warning = FALSE,  # Change this to FALSE before you submit your assignment
error = FALSE,    # Change this to FALSE before you submit your assignment
out.width = "70%",
fig.width = 8,
fig.height = 6,
fig.retina = 3)
set.seed(6)
# Libraries required for the analysis (you can add more if you want to)
library(tidyverse)
library(readr)
library(lubridate)
library(tsibble)
library(colorspace)
library(ggrepel)
library(kableExtra)
library(ggResidpanel)
library(rpart)
library(rpart.plot)
library(visdat)
library(plotly)
library(ggResidpanel)
library(ggplot2)
pisa <- read.csv("data/pisa_au.csv") # reading the data
head(pisa,4)  # displaying first 4 rows
mean_scores <- pisa %>%
group_by(state) %>%   #1pt
summarise(mean_math = mean(math, na.rm =
TRUE),mean_science = mean(science, na.rm = TRUE),mean_read = mean(read, na.rm = TRUE))  # 1pt
mean_scores %>%
arrange(-mean_math) %>%  #1pt
head(3)   #1pt
top_marks <- pisa %>%
group_by(schtype) %>%
dplyr:: filter(gender== "female", birthyr == 1999) %>%
summarise (mean_math = mean (math, na.rm = TRUE) ,
mean_science = mean (science, na.rm = TRUE) , mean_read = mean (read, na.rm =
TRUE)) %>%
arrange (-mean_math, mean_science, -mean_read)
top_marks
read_state <- pisa %>%
filter (state %in% c("VIC", "NSW", "QLD"))
ggplot(read_state, aes ( x = read, fill = gender))+
geom_density() +
facet_grid (schtype~state)
pisa_filtered <- drop_na(pisa) #(2pt)
pisa_filtered<-pisa_filtered %>%
dplyr::mutate(tot_score = math+science+read) %>%   #1pt
dplyr::mutate(tot_time = math_time+science_time+read_time)   #1pt
pisa_filtered %>%  ggplot(aes(y=tot_score,x=tot_time))+geom_point() #(2pt)
library(dplyr)
music_instr_median <- pisa %>%
group_by(music_instr) %>%
summarise(median_read = median(read, na.rm = TRUE),
median_math = median(math, na.rm = TRUE),
median_science = median(science, na.rm = TRUE)) %>%
arrange(desc(median_read), desc(median_math), desc(median_science))
music_instr_median
music_instr_gender <- pisa %>%
group_by(music_instr, gender) %>%
summarise(median_read = median(read, na.rm = TRUE),
median_math = median(math, na.rm = TRUE),
median_science = median(science, na.rm = TRUE)) %>%
arrange(music_instr, gender)
music_instr_gender
df_new<- pisa_filtered %>%
mutate(num_gender = ifelse(gender == "female", 1, 0)) %>%
select(num_gender,music_instr,internet_use,sport,belong,anxtest,motivat,wealth, internet_use, read,tot_time, tot_score) #(1pt)
m<- dist(df_new) #(1pt)
# Solution for $k=5$
kmeans_basic <- kmeans(df_new, centers = 5)
kmeans_basic_df <- data.frame(Clusters = kmeans_basic$cluster, df_new) #(1pt)
#Number in each Cluster
kmeans_basic_df %>%
group_by(Clusters)%>%
count() #(2pt)
cluster_centers <- aggregate(df_new, by = list(Clusters = kmeans_basic_df$Clusters), FUN = mean)
cluster_centers <- cluster_centers[, -1]
print(cluster_centers)
mean_tot_score <- kmeans_basic_df %>%
group_by(Clusters) %>%
summarize(mean_tot_score = mean(tot_score))
print(mean_tot_score)
kmeans_basic_df %>%
pivot_longer(cols = num_gender, names_to = "Category", values_to = "Value") %>%
ggplot(aes(x = Clusters, y = Value)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "Clusters", y = "Median Value", title = "Median Value of 'num_gender' by Clusters") +
theme_minimal()
kmeans_basic_df %>%
pivot_longer(cols = num_gender, names_to = "Category", values_to = "Value") %>%
ggplot(aes(x = Clusters, y = Value)) +
geom_bar(stat = "identity", fill = "aquamarine") +
labs(x = "Clusters", y = "Median Value", title = "Median Value of 'num_gender' by Clusters") +
theme_minimal()
View(top_marks)
ggplot(data, aes(x = tot_scores, fill = gender)) +
geom_density(alpha = 0.5) +
facet_wrap(~ cluster, nrow = 2) +
labs(x = "Total Scores", y = "Density") +
ggtitle("Distribution of Total Scores by Gender across Clusters")
ggplot(pisa, aes(x = tot_scores, fill = gender)) +
geom_density(alpha = 0.5) +
facet_wrap(~ cluster, nrow = 2) +
labs(x = "Total Scores", y = "Density") +
ggtitle("Distribution of Total Scores by Gender across Clusters")
View(music_instr_gender)
ggplot(pisa_data, aes(x = tot_scores, fill = gender)) +
geom_density(alpha = 0.5) +
facet_wrap(~ cluster, nrow = 2) +
labs(x = "Total Scores", y = "Density") +
ggtitle("Distribution of Total Scores by Gender across Clusters")
ggplot(pisa, aes(x = tot_scores, fill = gender)) +
geom_density(alpha = 0.5) +
facet_wrap(~ cluster, nrow = 2) +
labs(x = "Total Scores", y = "Density") +
ggtitle("Distribution of Total Scores by Gender across Clusters")
ggplot(aes(x = tot_scores, fill = gender)) +
geom_density(alpha = 0.5) +
facet_wrap(~ cluster, nrow = 2) +
labs(x = "Total Scores", y = "Density") +
ggtitle("Distribution of Total Scores by Gender across Clusters")
# Plotting density plots
ggplot(pisa, aes(x = tot_scores, fill = gender)) +
geom_density(alpha = 0.5) +
facet_wrap(~ cluster, nrow = 2) +
labs(x = "Total Scores", y = "Density") +
ggtitle("Distribution of Total Scores by Gender across Clusters")
# Plotting density plots
ggplot(cluster_centers, aes(x = tot_scores, fill = gender)) +
geom_density(alpha = 0.5) +
facet_wrap(~ cluster, nrow = 2) +
labs(x = "Total Scores", y = "Density") +
ggtitle("Distribution of Total Scores by Gender across Clusters")
# Plotting density plots
ggplot(cluster_centers, aes(x = tot_scores, fill = gender)) +
geom_density(alpha = 0.5) +
facet_wrap(~ cluster, nrow = 2) +
labs(x = "Total Scores", y = "Density") +
ggtitle("Distribution of Total Scores by Gender across Clusters")
# Plotting density plots
ggplot(pisa_filtered, aes(x = tot_scores, fill = gender)) +
geom_density(alpha = 0.5) +
facet_wrap(~ cluster, nrow = 2) +
labs(x = "Total Scores", y = "Density") +
ggtitle("Distribution of Total Scores by Gender across Clusters")
# Plotting density plots
ggplot(pisa, aes(x = tot_scores, fill = gender)) +
geom_density(alpha = 0.5) +
facet_wrap(~ cluster, nrow = 2) +
labs(x = "Total Scores", y = "Density") +
ggtitle("Distribution of Total Scores by Gender across Clusters")
pisa$gender <- as.factor(pisa$gender)
pisa$cluster <- as.factor(pisa$cluster)
pisa$gender <- as.factor(pisa$gender)
pisa$cluster <- as.factor(pisa$cluster)
pisa$gender <- as.factor(pisa$gender)
pisa$cluster <- as.factor(pisa$cluster)
pisa$gender <- as.factor(pisa$gender)
pisa$cluster <- as.factor(pisa$cluster_centers)
pisa$gender <- as.factor(pisa$gender)
pisa$cluster <- as.factor(pisa$cluster_centers)
View(pisa)
View(pisa_filtered)
View(cluster_centers)
pisa$gender <- as.factor(pisa$gender)
# Plotting density plots
ggplot(pisa, aes(x = tot_scores, fill = gender)) +
geom_density(alpha = 0.5) +
facet_wrap(~ cluster, nrow = 2) +
labs(x = "Total Scores", y = "Density") +
ggtitle("Distribution of Total Scores by Gender across Clusters")
pisa$gender <- as.factor(pisa$gender)
# Plotting density plots
ggplot(pisa, aes(x = tot_scores, fill = gender)) +
geom_density(alpha = 0.5) +
facet_wrap(~ cluster, nrow = 2) +
labs(x = "Total Scores", y = "Density") +
ggtitle("Distribution of Total Scores by Gender across Clusters")
pisa$gender <- as.factor(pisa$gender)
pisa$cluster <- as.factor(pisa$cluster_centers)
top_marks <- pisa %>%
group_by(schtype) %>%
dplyr:: filter(gender== "female", birthyr == 2000) %>%
summarise (mean_math = mean (math, na.rm = TRUE) ,
mean_science = mean (science, na.rm = TRUE) , mean_read = mean (read, na.rm =
TRUE)) %>%
arrange (-mean_math, mean_science, -mean_read)
top_marks
top_marks <- pisa %>%
group_by(schtype) %>%
dplyr:: filter(gender== "female", birthyr == 1999) %>%
summarise (mean_math = mean (math, na.rm = TRUE) ,
mean_science = mean (science, na.rm = TRUE) , mean_read = mean (read, na.rm =
TRUE)) %>%
arrange (-mean_math, mean_science, -mean_read)
top_marks
# Plotting density plots
ggplot(pisa, aes(x = tot_scores, fill = gender)) +
geom_density(alpha = 0.5) +
facet_wrap(~ cluster, nrow = 2) +
labs(x = "Total Scores", y = "Density") +
ggtitle("Distribution of Total Scores by Gender across Clusters")
pisa_filtered <- drop_na(pisa) #(2pt)
pisa_filtered<-pisa_filtered %>%
dplyr::mutate(tot_score = math+science+read) %>%   #1pt
dplyr::mutate(tot_time = math_time+science_time+read_time)   #1pt
pisa_filtered %>%  ggplot(aes(y=tot_score,x=tot_time))+geom_point(col="blue") #(2pt)
pisa_filtered <- drop_na(pisa) #(2pt)
pisa_filtered<-pisa_filtered %>%
dplyr::mutate(tot_score = math+science+read) %>%   #1pt
dplyr::mutate(tot_time = math_time+science_time+read_time)   #1pt
pisa_filtered %>%  ggplot(aes(y=tot_score,x=tot_time))+geom_point(col="red") #(2pt)
View(music_instr_median)
kmeans_basic_df %>%
pivot_longer(cols = num_gender, names_to = "Category", values_to = "Value") %>%
ggplot(aes(x = Clusters, y = Value)) +
geom_bar(stat = "identity", fill = "aquamarine") +
labs(x = "Clusters", y = "Median Value", title = "Median Value of 'num_gender' by Clusters") +
theme_minimal()
kmeans_basic_df %>%
ggplot (aes (x = tot_score, fill = factor
(num_gender))) +
geom_density (alpha = 0.5) +
facet_wrap(~ Clusters, ncol = 2) +
labs (x = "Total Score'", y = "Density", fill = "Gender") +
theme minimal()
kmeans_basic_df %>%
ggplot (aes (x = tot_score, fill = factor
(num_gender))) +
geom_density (alpha = 0.5) +
facet_wrap(~ Clusters, ncol = 2) +
labs (x = "Total Score", y = "Density", fill = "Gender") +
theme minimal()
kmeans_basic_df %>%
ggplot (aes (x = tot_score, fill = factor
(num_gender))) +
geom_density (alpha = 0.5) +
facet_wrap(~ Clusters, ncol = 2) +
labs (x = "Total Score", y = "Density", fill = "Gender") +
theme minimal()
kmeans_basic_df %>%
ggplot (aes (x = tot_score, fill = factor(num_gender))) +
geom_density (alpha = 0.5) +
facet_wrap(~ Clusters, ncol = 2) +
labs (x = "Total Score", y = "Density", fill = "Gender") +
theme_minimal()
kmeans_basic_df %>%
ggplot (aes (x = tot_score, fill = factor (num_gender))) +
geom_density (alpha = 0.5) +
facet_wrap(~ Clusters, ncol = 2) +
labs (x = "Total Score", y = "Density", fill = "Gender") +
theme minimal()
kmeans_basic_df %>%
ggplot (aes (x = read, fill = factor(num_gender))) +
geom_density (alpha = 0.5) +
facet_wrap(~ Clusters, ncol = 2) +
labs (x = "Total Score", y = "Density", fill = "Gender") +
theme_minimal()
cluster_centers <- aggregate(df_new, by = list(Clusters = kmeans_basic_df$Clusters), FUN = mean)
cluster_centers <- cluster_centers[, -1]
print(cluster_centers)
mean_tot_score <- kmeans_basic_df %>%
group_by(Clusters) %>%
summarize(mean_tot_score = mean(tot_score))
print(mean_tot_score)
df_new<- pisa_filtered %>%
mutate(num_gender = ifelse(gender == "female", 1, 0)) %>%
select(num_gender,music_instr,internet_use,sport,belong,anxtest,motivat,wealth, internet_use, read,tot_time, tot_score) #(1pt)
m<- dist(df_new) #(1pt)
# Solution for $k=5$
kmeans_basic <- kmeans(df_new, centers = 5)
kmeans_basic_df <- data.frame(Clusters = kmeans_basic$cluster, df_new) #(1pt)
#Number in each Cluster
kmeans_basic_df %>%
group_by(Clusters)%>%
count() #(2pt)
